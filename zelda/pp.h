/*=============================================================================
    Copyright (c) 2012 Paul Fultz II
    pp.h
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/

#ifndef ZELDA_GUARD_PP_H
#define ZELDA_GUARD_PP_H

//#define BOOST_PP_VARIADICS 1
#include <boost/preprocessor.hpp>
//#include <boost/preprocessor/variadic.hpp>
#include <boost/preprocessor/facilities/is_empty.hpp>
//#include <boost/preprocessor/facilities/overload.hpp>
#include "tokens.h"

//Utility

// Various utilities
#define ZELDA_PP_EAT(...)
#define ZELDA_PP_REM(...) __VA_ARGS__
#define ZELDA_PP_EXPAND(...) __VA_ARGS__
#define ZELDA_PP_EMPTY(...)
#define ZELDA_PP_TRUE(...) 1
#define ZELDA_PP_FALSE(...) 0
#define ZELDA_PP_DEFER(...) __VA_ARGS__ ZELDA_PP_EMPTY()
#define ZELDA_PP_OBSTRUCT(...) __VA_ARGS__ ZELDA_PP_DEFER(ZELDA_PP_EMPTY)()
#define ZELDA_PP_WHEN(cond) BOOST_PP_IF(cond, ZELDA_PP_REM, ZELDA_PP_EAT)
 
 /**
 * ZELDA_PP_NARGS returns the number of args in __VA_ARGS__
 */
#define ZELDA_PP_NARGS(...) \
         ZELDA_PP_DETAIL_NARG((__VA_ARGS__,ZELDA_PP_DETAIL_RSEQ_N()))
#define ZELDA_PP_DETAIL_NARG(args) \
         ZELDA_PP_DETAIL_ARG_N args
#define ZELDA_PP_DETAIL_ARG_N( \
          _1, _2, _3, _4, _5, _6, _7, _8, _9,_10, \
         _11,_12,_13,_14,_15,_16,_17,_18,_19,_20, \
         _21,_22,_23,_24,_25,_26,_27,_28,_29,_30, \
         _31,_32,_33,_34,_35,_36,_37,_38,_39,_40, \
         _41,_42,_43,_44,_45,_46,_47,_48,_49,_50, \
         _51,_52,_53,_54,_55,_56,_57,_58,_59,_60, \
         _61,_62,_63,N,...) N
#define ZELDA_PP_DETAIL_RSEQ_N() \
         63,62,61,60,                   \
         59,58,57,56,55,54,53,52,51,50, \
         49,48,47,46,45,44,43,42,41,40, \
         39,38,37,36,35,34,33,32,31,30, \
         29,28,27,26,25,24,23,22,21,20, \
         19,18,17,16,15,14,13,12,11,10, \
         9,8,7,6,5,4,3,2,1,0 


//
// ZELDA_PP_IS_PAREN is used to detect if the first token is a parenthesis.
// It expands to 1 if it is, otherwise it expands to 0.
//
#define ZELDA_PP_IS_PAREN(x) ZELDA_PP_IS_PAREN_CHECK(ZELDA_PP_IS_PAREN_PROBE x)
#define ZELDA_PP_IS_PAREN_CHECK(...) ZELDA_PP_IS_PAREN_CHECK_N(__VA_ARGS__,0)
#define ZELDA_PP_IS_PAREN_PROBE(...) ~, 1,
#ifndef _MSC_VER
#define ZELDA_PP_IS_PAREN_CHECK_N(x, n, ...) n
#else
// MSVC workarounds
#define ZELDA_PP_IS_PAREN_CHECK_RES(x) x
#define ZELDA_PP_IS_PAREN_CHECK_II(x, n, ...) n
#define ZELDA_PP_IS_PAREN_CHECK_I(x) ZELDA_PP_IS_PAREN_CHECK_RES(ZELDA_PP_IS_PAREN_CHECK_II x)
#define ZELDA_PP_IS_PAREN_CHECK_N(...) ZELDA_PP_IS_PAREN_CHECK_I((__VA_ARGS__))
#endif

//
// ZELDA_PP_IS_EMPTY will expands to 1 if the parameter is empty, otherwise
// it expands to 0. This will work even if the parameter given is a set
// of parenthesis.
//
#define ZELDA_PP_IS_EMPTY(x) BOOST_PP_CAT(ZELDA_PP_DETAIL_IS_EMPTY_, ZELDA_PP_IS_PAREN(x))(x)
#define ZELDA_PP_DETAIL_IS_EMPTY_0(x) BOOST_PP_IS_EMPTY(x)
#define ZELDA_PP_DETAIL_IS_EMPTY_1(x) 0 

//
// ZELDA_PP_HEAD retrieves the first element of a sequence.
// Example:
//
//     ZELDA_PP_HEAD((1)(2)(3)) // Expands to (1)
//
#define ZELDA_PP_HEAD(x) ZELDA_PP_PICK_HEAD(ZELDA_PP_MARK x)
#define ZELDA_PP_MARK(...) (__VA_ARGS__), 
#define ZELDA_PP_PICK_HEAD(...) ZELDA_PP_PICK_HEAD_I(__VA_ARGS__,)
#ifndef _MSC_VER
#define ZELDA_PP_PICK_HEAD_I(x, ...) x
#else
// MSVC workarounds
#define ZELDA_PP_PICK_HEAD_III(x, ...) x
#define ZELDA_PP_PICK_HEAD_II(x) ZELDA_PP_PICK_HEAD_III x
#define ZELDA_PP_PICK_HEAD_I(...) ZELDA_PP_PICK_HEAD_II((__VA_ARGS__))
#endif


//
// ZELDA_PP_TAIL retrieves the tail of a sequence.
// Example:
//
//     ZELDA_PP_TAIL((1)(2)(3)) // Expands to (2)(3)
//
#define ZELDA_PP_TAIL(x) ZELDA_PP_EAT x



//
// ZELDA_PP_STRING_TOKEN
//
#define ZELDA_PP_STRING_TOKEN(x) BOOST_PP_IIF(ZELDA_PP_IS_PAREN(x), ZELDA_PP_STRING_TOKEN_PAREN, ZELDA_PP_STRING_TOKEN_KEYWORD)(x)
#define ZELDA_PP_STRING_TOKEN_KEYWORD(x) ZELDA_PP_STRING_TOKEN_KEYWORD_CHECK(BOOST_PP_CAT(ZELDA_PP_STRING_, x), x)
#define ZELDA_PP_STRING_TOKEN_KEYWORD_CHECK(tokened, raw) BOOST_PP_IIF(ZELDA_PP_IS_PAREN(tokened), tokened, (raw))
#define ZELDA_PP_STRING_TOKEN_PAREN(x) (ZELDA_PP_HEAD(x)) ZELDA_PP_TAIL(x) 

//
// ZELDA_PP_STRING_TO_SEQ converts a string into a preprocessor sequence
// 
#define ZELDA_PP_STRING_TO_SEQ(x) ZELDA_PP_STRING_TO_SEQ_WHILE_M \
( \
    BOOST_PP_WHILE(ZELDA_PP_STRING_TO_SEQ_WHILE_P, ZELDA_PP_STRING_TO_SEQ_WHILE_O, (,x)) \
)

#define ZELDA_PP_STRING_TO_SEQ_WHILE_P(r, state) ZELDA_PP_STRING_TO_SEQ_P state
#define ZELDA_PP_STRING_TO_SEQ_WHILE_O(r, state) ZELDA_PP_STRING_TO_SEQ_O state
#define ZELDA_PP_STRING_TO_SEQ_WHILE_M(state) ZELDA_PP_STRING_TO_SEQ_M state

#define ZELDA_PP_STRING_TO_SEQ_P(prev, tail) BOOST_PP_NOT(ZELDA_PP_IS_EMPTY(tail))
#define ZELDA_PP_STRING_TO_SEQ_O(prev, tail)  \
   ZELDA_PP_STRING_TO_SEQ_REPLACE(prev, ZELDA_PP_STRING_TOKEN(tail))

#define ZELDA_PP_STRING_TO_SEQ_REPLACE(prev, tail) \
    (prev ZELDA_PP_HEAD(tail), ZELDA_PP_TAIL(tail))

#define ZELDA_PP_STRING_TO_SEQ_M(prev, tail) prev

//
// ZELDA_PP_SEQ_TO_STRING outputs the sequence
//
#define ZELDA_PP_SEQ_TO_STRING(seq) BOOST_PP_SEQ_FOR_EACH(ZELDA_PP_SEQ_TO_STRING_EACH, ~, seq) 
#define ZELDA_PP_SEQ_TO_STRING_EACH(r, data, x) x 

//
// ZELDA_PP_SEQ_SPLIT
//
#define ZELDA_PP_SEQ_SPLIT(seq, pred, data) ZELDA_DETAIL_PP_SEQ_SPLIT_FOLD_LEFT_M(BOOST_PP_SEQ_FOLD_LEFT(ZELDA_DETAIL_PP_SEQ_SPLIT_FOLD_LEFT_O, (pred, data,,), seq))
#define ZELDA_DETAIL_PP_SEQ_SPLIT_FOLD_LEFT_O(s, state, x) ZELDA_DETAIL_PP_SEQ_SPLIT_FOLD_LEFT_INVOKE((s, x, ZELDA_PP_REM state))
#define ZELDA_DETAIL_PP_SEQ_SPLIT_FOLD_LEFT_INVOKE(x) ZELDA_DETAIL_PP_SEQ_SPLIT_OP x
#define ZELDA_DETAIL_PP_SEQ_SPLIT_OP(s, x, pred, data, seq, elem) \
    BOOST_PP_IF(pred(s, data, x), ZELDA_DETAIL_PP_SEQ_SPLIT_OP_TRUE, ZELDA_DETAIL_PP_SEQ_SPLIT_OP_FALSE)(x, pred, data, seq, elem)
#define ZELDA_DETAIL_PP_SEQ_SPLIT_OP_TRUE(x, pred, data, seq, elem) BOOST_PP_IIF(ZELDA_PP_IS_PAREN(elem), \
    (pred, data, seq(elem),),\
    (pred, data, seq,))
#define ZELDA_DETAIL_PP_SEQ_SPLIT_OP_FALSE(x, pred, data, seq, elem) (pred, data, seq, elem (x))
#define ZELDA_DETAIL_PP_SEQ_SPLIT_FOLD_LEFT_M(state) ZELDA_DETAIL_PP_SEQ_SPLIT_M state
#define ZELDA_DETAIL_PP_SEQ_SPLIT_M(pred, data, seq, elem) seq BOOST_PP_IIF(ZELDA_PP_IS_PAREN(elem), (elem),)


//
// ZELDA_PP_EQUAL
//
#define ZELDA_PP_IS_COMPARABLE(x) BOOST_PP_IIF(ZELDA_PP_IS_PAREN(x), ZELDA_PP_FALSE, ZELDA_PP_PRIMITIVE_IS_COMPARABLE)(x)

#define ZELDA_PP_PRIMITIVE_IS_COMPARABLE(x) ZELDA_PP_IS_PAREN( ZELDA_PP_COMPARE_ ## x (()) )

#define ZELDA_PP_PRIMITIVE_COMPARE(x, y) ZELDA_PP_IS_PAREN \
( \
ZELDA_PP_COMPARE_ ## x ( ZELDA_PP_COMPARE_ ## y ZELDA_PP_EMPTY()(()) ) \
)

#define ZELDA_PP_NOT_EQUAL(x, y) \
BOOST_PP_IIF(BOOST_PP_BITAND( ZELDA_PP_IS_COMPARABLE(x), ZELDA_PP_IS_COMPARABLE(y) ), \
   ZELDA_PP_PRIMITIVE_COMPARE, \
   ZELDA_PP_TRUE \
)(x, y)

#define ZELDA_PP_EQUAL(x, y) BOOST_PP_COMPL(ZELDA_PP_NOT_EQUAL(x, y))


//
// SEQ
//
// ZELDA_PP_SEQ_FOR_EACH_PRODUCT for each product with data
#define ZELDA_PP_SEQ_FOR_EACH_PRODUCT(macro, data, seqs) \
BOOST_ZELDA_PP_SEQ_FOR_EACH_PRODUCT(DETAIL_ZELDA_PP_SEQ_FOR_EACH_PRODUCT_EACH, ((macro))((data))seqs)

#define DETAIL_ZELDA_PP_SEQ_FOR_EACH_PRODUCT_EACH_I(r, macro, data, product) macro(r, data, product) 
#define DETAIL_ZELDA_PP_SEQ_FOR_EACH_PRODUCT_EACH(r, product) \
DETAIL_ZELDA_PP_SEQ_FOR_EACH_PRODUCT_EACH_I(r, BOOST_PP_SEQ_ELEM(0, product), BOOST_PP_SEQ_ELEM(1, product), BOOST_PP_SEQ_REST_N(2,product))

//
// ZELDA_PP_MSVC_INVOKE invokes a vardiac macro on msvc
//
#define ZELDA_PP_MSVC_INVOKE BOOST_PP_CAT(ZELDA_PP_MSVC_INVOKE_, BOOST_PP_AUTO_REC(ZELDA_PP_DETAIL_MSVC_CALL_P, 8))

#define ZELDA_PP_DETAIL_MSVC_CALL_P(n) ZELDA_PP_IS_PAREN( ZELDA_PP_MSVC_INVOKE_ ## n((),) )

#define ZELDA_PP_MSVC_INVOKE_1(macro, args) ZELDA_PP_MSVC_INVOKE_X_1(macro args)
#define ZELDA_PP_MSVC_INVOKE_2(macro, args) ZELDA_PP_MSVC_INVOKE_X_2(macro args)
#define ZELDA_PP_MSVC_INVOKE_3(macro, args) ZELDA_PP_MSVC_INVOKE_X_3(macro args)
#define ZELDA_PP_MSVC_INVOKE_4(macro, args) ZELDA_PP_MSVC_INVOKE_X_4(macro args)
#define ZELDA_PP_MSVC_INVOKE_5(macro, args) ZELDA_PP_MSVC_INVOKE_X_5(macro args)
#define ZELDA_PP_MSVC_INVOKE_6(macro, args) ZELDA_PP_MSVC_INVOKE_X_6(macro args)
#define ZELDA_PP_MSVC_INVOKE_7(macro, args) ZELDA_PP_MSVC_INVOKE_X_7(macro args)
#define ZELDA_PP_MSVC_INVOKE_8(macro, args) ZELDA_PP_MSVC_INVOKE_X_8(macro args)

#define ZELDA_PP_MSVC_INVOKE_X_1(x) x
#define ZELDA_PP_MSVC_INVOKE_X_2(x) x
#define ZELDA_PP_MSVC_INVOKE_X_3(x) x
#define ZELDA_PP_MSVC_INVOKE_X_4(x) x
#define ZELDA_PP_MSVC_INVOKE_X_5(x) x
#define ZELDA_PP_MSVC_INVOKE_X_6(x) x
#define ZELDA_PP_MSVC_INVOKE_X_7(x) x
#define ZELDA_PP_MSVC_INVOKE_X_8(x) x

//
// ZELDA_PP_ARGS_TO_SEQ converts args to a seq
//
#define ZELDA_PP_ARGS_TO_SEQ(...) ZELDA_PP_DETAIL_ARGS_TO_SEQ(ZELDA_PP_NARGS(__VA_ARGS__), (__VA_ARGS__))
#define ZELDA_PP_DETAIL_ARGS_TO_SEQ(size, tuple) BOOST_PP_TUPLE_TO_SEQ(size, tuple)



#define ZELDA_PP_TYPEOF(x) ZELDA_PP_DETAIL_TYPEOF(ZELDA_PP_DETAIL_TYPEOF_PROBE x,)
#ifndef _MSC_VER
#define ZELDA_PP_DETAIL_TYPEOF(...) ZELDA_PP_DETAIL_TYPEOF_HEAD(__VA_ARGS__)
#else
// MSVC Workarounds
#define ZELDA_PP_DETAIL_TYPEOF(...) ZELDA_PP_MSVC_INVOKE(ZELDA_PP_DETAIL_TYPEOF_HEAD, (__VA_ARGS__))
#endif
#define ZELDA_PP_DETAIL_TYPEOF_HEAD(x, ...) ZELDA_PP_REM x
#define ZELDA_PP_DETAIL_TYPEOF_PROBE(...) (__VA_ARGS__),

#define ZELDA_PP_STRIP(x) ZELDA_PP_EAT x

#define ZELDA_PP_PAIR(x) ZELDA_PP_REM x

#define ZELDA_PP_VARN_CAT(n, tuple) ZELDA_DETAIL_PP_VARN_INVOKE((n, ZELDA_PP_REM tuple, BOOST_PP_INTERCEPT, BOOST_PP_INTERCEPT, BOOST_PP_INTERCEPT, BOOST_PP_INTERCEPT, BOOST_PP_INTERCEPT, BOOST_PP_INTERCEPT, BOOST_PP_INTERCEPT, BOOST_PP_INTERCEPT))
#ifndef _MSC_VER
#define ZELDA_DETAIL_PP_VARN_INVOKE(data)  ZELDA_DETAIL_PP_VARN_CAT data
#else
// MSVC Workarounds
#define ZELDA_DETAIL_PP_VARN_INVOKE(data) ZELDA_PP_MSVC_INVOKE(ZELDA_DETAIL_PP_VARN_CAT, data)
#endif
#define ZELDA_DETAIL_PP_VARN_CAT(n, a, b, c, d, e, f, g, h, ...) ZELDA_DETAIL_PP_VARN_CAT_EACH(a, n) ZELDA_DETAIL_PP_VARN_CAT_EACH(b, n) ZELDA_DETAIL_PP_VARN_CAT_EACH(c, n) ZELDA_DETAIL_PP_VARN_CAT_EACH(d, n) ZELDA_DETAIL_PP_VARN_CAT_EACH(e, n) ZELDA_DETAIL_PP_VARN_CAT_EACH(f, n) ZELDA_DETAIL_PP_VARN_CAT_EACH(g, n) ZELDA_DETAIL_PP_VARN_CAT_EACH(h, n)
#define ZELDA_DETAIL_PP_VARN_CAT_EACH(a, n) BOOST_PP_IF(ZELDA_PP_IS_PAREN(a), ZELDA_DETAIL_PP_VARN_CAT_EACH_PAREN, ZELDA_DETAIL_PP_VARN_CAT_EACH_TOKEN)(a, n)
#define ZELDA_DETAIL_PP_VARN_CAT_EACH_PAREN(a, n) (BOOST_PP_CAT(ZELDA_PP_REM a, n))
#define ZELDA_DETAIL_PP_VARN_CAT_EACH_TOKEN(a, n)  BOOST_PP_CAT(a, n)

// TODO: Remove when VARN_CAT can handle parenthesis
#define ZELDA_PP_CONSTRUCT(n, ...) BOOST_PP_ENUM(n, ZELDA_DETAIL_PP_CONSTRUCT_EACH, (__VA_ARGS__)) 
#define ZELDA_DETAIL_PP_CONSTRUCT_EACH(z, i, data) ZELDA_DETAIL_PP_CONSTRUCT_INVOKE((i, ZELDA_PP_REM data))
#define ZELDA_DETAIL_PP_CONSTRUCT_INVOKE(data) ZELDA_DETAIL_PP_CONSTRUCT_OP data
#define ZELDA_DETAIL_PP_CONSTRUCT_OP(n, ...) BOOST_PP_CAT(ZELDA_DETAIL_PP_CONSTRUCT_CAT_, ZELDA_PP_NARGS(__VA_ARGS__))(n, __VA_ARGS__)
#define ZELDA_DETAIL_PP_CONSTRUCT_CAT_1(n, x) x ## n (x ## n)
#define ZELDA_DETAIL_PP_CONSTRUCT_CAT_2(n, x, y) x ## n (y ## n)

#define ZELDA_PP_FIXED_PARAMS(n, max, var, fixed) \
BOOST_PP_ENUM_PARAMS(n,var)                                 \
BOOST_PP_COMMA_IF(n)                                      \
BOOST_PP_ENUM_PARAMS(BOOST_PP_SUB(max,n), fixed BOOST_PP_INTERCEPT)

// TODO: Allow for a seq to be the first parmeter instead of just a number.
#define ZELDA_PP_PARAMS(n, ...) BOOST_PP_ENUM(n, ZELDA_DETAIL_PP_PARAMS_EACH, (__VA_ARGS__))
#define ZELDA_PP_PARAMS_Z(z, n, ...) BOOST_PP_ENUM_ ## z(n, ZELDA_DETAIL_PP_PARAMS_EACH, (__VA_ARGS__)) 
#define ZELDA_DETAIL_PP_PARAMS_EACH(z, n, data) ZELDA_PP_VARN_CAT(n, data)

#define ZELDA_PP_GEN(n, ...) BOOST_PP_REPEAT(n, ZELDA_DETAIL_PP_GEN_EACH, (__VA_ARGS__)) 
#define ZELDA_PP_GEN_Z(z, n, ...) BOOST_PP_REPEAT_ ## z(n, ZELDA_DETAIL_PP_GEN_EACH, (__VA_ARGS__)) 
#define ZELDA_DETAIL_PP_GEN_EACH(z, n, data) ZELDA_PP_VARN_CAT(n, data)

#define ZELDA_PP_SEQ_GEN(z, n, ...) BOOST_PP_REPEAT_ ## z(n, ZELDA_DETAIL_PP_GEN_SEQ_EACH, (__VA_ARGS__)) 
#define ZELDA_DETAIL_PP_GEN_SEQ_EACH(z, n, data) (ZELDA_PP_VARN_CAT(n, data))

#define ZELDA_PP_SEQ_PREFIX(prefix, seq) BOOST_PP_SEQ_TRANSFORM(ZELDA_DETAIL_PP_SEQ_PREFIX_OP, prefix, seq)  
#define ZELDA_DETAIL_PP_SEQ_PREFIX_OP(d, prefix, x) prefix x

#define ZELDA_PP_SEQ_POSTFIX(postfix, seq) BOOST_PP_SEQ_TRANSFORM(ZELDA_DETAIL_PP_SEQ_POSTFIX_OP, postfix, seq)  
#define ZELDA_DETAIL_PP_SEQ_POSTFIX_OP(d, postfix, x) postfix x

#define ZELDA_PP_SEQ_POST_ENUM(seq, ...) BOOST_PP_SEQ_FOR_EACH_I(ZELDA_DETAIL_PP_SEQ_POST_ENUM_EACH, (__VA_ARGS__), seq) 
#define ZELDA_DETAIL_PP_SEQ_POST_ENUM_EACH(r, data, i, elem) (ZELDA_PP_VARN_CAT(i, data) elem)

#define ZELDA_PP_SEQ_MERGE(seq1, seq2) BOOST_PP_REPEAT(BOOST_PP_SEQ_SIZE(seq1), ZELDA_DETAIL_PP_SEQ_MERGE_EACH, (seq1, seq2))
#define ZELDA_DETAIL_PP_SEQ_MERGE_EACH(z, n, data) ZELDA_DETAIL_PP_SEQ_MERGE_INVOKE((n, ZELDA_PP_REM data))
#define ZELDA_DETAIL_PP_SEQ_MERGE_INVOKE(data) ZELDA_DETAIL_PP_SEQ_MERGE_OP data
#define ZELDA_DETAIL_PP_SEQ_MERGE_OP(n, seq1, seq2) BOOST_PP_SEQ_ELEM(n, seq1) BOOST_PP_SEQ_ELEM(n, seq2)

#define ZELDA_PP_SEQ_MERGE_CAT(seq1, seq2) BOOST_PP_REPEAT(BOOST_PP_SEQ_SIZE(seq1), ZELDA_DETAIL_PP_SEQ_MERGE_CAT_EACH, (seq1, seq2))
#define ZELDA_DETAIL_PP_SEQ_MERGE_CAT_EACH(z, n, data) ZELDA_DETAIL_PP_SEQ_MERGE_CAT_INVOKE((n, ZELDA_PP_REM data))
#define ZELDA_DETAIL_PP_SEQ_MERGE_CAT_INVOKE(data) ZELDA_DETAIL_PP_SEQ_MERGE_CAT_OP data
#define ZELDA_DETAIL_PP_SEQ_MERGE_CAT_OP(n, seq1, seq2) BOOST_PP_CAT(BOOST_PP_SEQ_ELEM(n, seq1), BOOST_PP_SEQ_ELEM(n, seq2))

#define ZELDA_PP_SEQ_HEAD(seq) ZELDA_DETAIL_PP_SEQ_HEAD(ZELDA_PP_REM ZELDA_PP_HEAD(head))
#define ZELDA_DETAIL_PP_SEQ_HEAD(...) __VA_ARGS__

#define ZELDA_PP_SEQ_TAIL(seq) ZELDA_PP_EAT seq

//
// ZELDA_PP_SEQ_TRANSFORM_I
//
#define ZELDA_PP_SEQ_TRANSFORM_I(op, data, seq) \
ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_M(BOOST_PP_WHILE(ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_P, ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_OP, (op, data, 0, , seq)))

#define ZELDA_PP_SEQ_TRANSFORM_I_D(d, op, data, seq) \
ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_M(BOOST_PP_WHILE_ ## d(ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_P, ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_OP, (op, data, 0, , seq)))

#define ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_OP(d, state) ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_INVOKE(ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_OP, (d, ZELDA_PP_REM state))
#define ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_P(d, state) ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_INVOKE(ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_P, (d, ZELDA_PP_REM state))
#define ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_M(state) ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_M state
#define ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_WHILE_INVOKE(macro, args) macro args

#define ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_OP(d, op, data, i, result, seq) (op, data, BOOST_PP_INC(i), result(op(d, data, i, BOOST_PP_SEQ_HEAD(seq))), BOOST_PP_SEQ_TAIL(seq))
#define ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_P(d, op, data, i, result, seq) ZELDA_PP_IS_PAREN(seq)
#define ZELDA_DETAIL_PP_SEQ_TRANSFORM_I_M(op, data, i, result, seq) result

#define ZELDA_PP_INTERCEPT_COMMA ZELDA_PP_INTERCEPT_COMMA_

#define ZELDA_PP_INTERCEPT_COMMA_0 ,
#define ZELDA_PP_INTERCEPT_COMMA_1 ,
#define ZELDA_PP_INTERCEPT_COMMA_2 ,
#define ZELDA_PP_INTERCEPT_COMMA_3 ,
#define ZELDA_PP_INTERCEPT_COMMA_4 ,
#define ZELDA_PP_INTERCEPT_COMMA_5 ,
#define ZELDA_PP_INTERCEPT_COMMA_6 ,
#define ZELDA_PP_INTERCEPT_COMMA_7 ,
#define ZELDA_PP_INTERCEPT_COMMA_8 ,
#define ZELDA_PP_INTERCEPT_COMMA_9 ,
#define ZELDA_PP_INTERCEPT_COMMA_10 ,
#define ZELDA_PP_INTERCEPT_COMMA_11 ,
#define ZELDA_PP_INTERCEPT_COMMA_12 ,
#define ZELDA_PP_INTERCEPT_COMMA_13 ,
#define ZELDA_PP_INTERCEPT_COMMA_14 ,
#define ZELDA_PP_INTERCEPT_COMMA_15 ,
#define ZELDA_PP_INTERCEPT_COMMA_16 ,
#define ZELDA_PP_INTERCEPT_COMMA_17 ,
#define ZELDA_PP_INTERCEPT_COMMA_18 ,
#define ZELDA_PP_INTERCEPT_COMMA_19 ,
#define ZELDA_PP_INTERCEPT_COMMA_20 ,
#define ZELDA_PP_INTERCEPT_COMMA_21 ,
#define ZELDA_PP_INTERCEPT_COMMA_22 ,
#define ZELDA_PP_INTERCEPT_COMMA_23 ,
#define ZELDA_PP_INTERCEPT_COMMA_24 ,
#define ZELDA_PP_INTERCEPT_COMMA_25 ,
#define ZELDA_PP_INTERCEPT_COMMA_26 ,
#define ZELDA_PP_INTERCEPT_COMMA_27 ,
#define ZELDA_PP_INTERCEPT_COMMA_28 ,
#define ZELDA_PP_INTERCEPT_COMMA_29 ,
#define ZELDA_PP_INTERCEPT_COMMA_30 ,
#define ZELDA_PP_INTERCEPT_COMMA_31 ,
#define ZELDA_PP_INTERCEPT_COMMA_32 ,
#define ZELDA_PP_INTERCEPT_COMMA_33 ,
#define ZELDA_PP_INTERCEPT_COMMA_34 ,
#define ZELDA_PP_INTERCEPT_COMMA_35 ,
#define ZELDA_PP_INTERCEPT_COMMA_36 ,
#define ZELDA_PP_INTERCEPT_COMMA_37 ,
#define ZELDA_PP_INTERCEPT_COMMA_38 ,
#define ZELDA_PP_INTERCEPT_COMMA_39 ,
#define ZELDA_PP_INTERCEPT_COMMA_40 ,
#define ZELDA_PP_INTERCEPT_COMMA_41 ,
#define ZELDA_PP_INTERCEPT_COMMA_42 ,
#define ZELDA_PP_INTERCEPT_COMMA_43 ,
#define ZELDA_PP_INTERCEPT_COMMA_44 ,
#define ZELDA_PP_INTERCEPT_COMMA_45 ,
#define ZELDA_PP_INTERCEPT_COMMA_46 ,
#define ZELDA_PP_INTERCEPT_COMMA_47 ,
#define ZELDA_PP_INTERCEPT_COMMA_48 ,
#define ZELDA_PP_INTERCEPT_COMMA_49 ,
#define ZELDA_PP_INTERCEPT_COMMA_50 ,
#define ZELDA_PP_INTERCEPT_COMMA_51 ,
#define ZELDA_PP_INTERCEPT_COMMA_52 ,
#define ZELDA_PP_INTERCEPT_COMMA_53 ,
#define ZELDA_PP_INTERCEPT_COMMA_54 ,
#define ZELDA_PP_INTERCEPT_COMMA_55 ,
#define ZELDA_PP_INTERCEPT_COMMA_56 ,
#define ZELDA_PP_INTERCEPT_COMMA_57 ,
#define ZELDA_PP_INTERCEPT_COMMA_58 ,
#define ZELDA_PP_INTERCEPT_COMMA_59 ,
#define ZELDA_PP_INTERCEPT_COMMA_60 ,
#define ZELDA_PP_INTERCEPT_COMMA_61 ,
#define ZELDA_PP_INTERCEPT_COMMA_62 ,
#define ZELDA_PP_INTERCEPT_COMMA_63 ,
#define ZELDA_PP_INTERCEPT_COMMA_64 ,
#define ZELDA_PP_INTERCEPT_COMMA_65 ,
#define ZELDA_PP_INTERCEPT_COMMA_66 ,
#define ZELDA_PP_INTERCEPT_COMMA_67 ,
#define ZELDA_PP_INTERCEPT_COMMA_68 ,
#define ZELDA_PP_INTERCEPT_COMMA_69 ,
#define ZELDA_PP_INTERCEPT_COMMA_70 ,
#define ZELDA_PP_INTERCEPT_COMMA_71 ,
#define ZELDA_PP_INTERCEPT_COMMA_72 ,
#define ZELDA_PP_INTERCEPT_COMMA_73 ,
#define ZELDA_PP_INTERCEPT_COMMA_74 ,
#define ZELDA_PP_INTERCEPT_COMMA_75 ,
#define ZELDA_PP_INTERCEPT_COMMA_76 ,
#define ZELDA_PP_INTERCEPT_COMMA_77 ,
#define ZELDA_PP_INTERCEPT_COMMA_78 ,
#define ZELDA_PP_INTERCEPT_COMMA_79 ,
#define ZELDA_PP_INTERCEPT_COMMA_80 ,
#define ZELDA_PP_INTERCEPT_COMMA_81 ,
#define ZELDA_PP_INTERCEPT_COMMA_82 ,
#define ZELDA_PP_INTERCEPT_COMMA_83 ,
#define ZELDA_PP_INTERCEPT_COMMA_84 ,
#define ZELDA_PP_INTERCEPT_COMMA_85 ,
#define ZELDA_PP_INTERCEPT_COMMA_86 ,
#define ZELDA_PP_INTERCEPT_COMMA_87 ,
#define ZELDA_PP_INTERCEPT_COMMA_88 ,
#define ZELDA_PP_INTERCEPT_COMMA_89 ,
#define ZELDA_PP_INTERCEPT_COMMA_90 ,
#define ZELDA_PP_INTERCEPT_COMMA_91 ,
#define ZELDA_PP_INTERCEPT_COMMA_92 ,
#define ZELDA_PP_INTERCEPT_COMMA_93 ,
#define ZELDA_PP_INTERCEPT_COMMA_94 ,
#define ZELDA_PP_INTERCEPT_COMMA_95 ,
#define ZELDA_PP_INTERCEPT_COMMA_96 ,
#define ZELDA_PP_INTERCEPT_COMMA_97 ,
#define ZELDA_PP_INTERCEPT_COMMA_98 ,
#define ZELDA_PP_INTERCEPT_COMMA_99 ,
#define ZELDA_PP_INTERCEPT_COMMA_100 ,
#define ZELDA_PP_INTERCEPT_COMMA_101 ,
#define ZELDA_PP_INTERCEPT_COMMA_102 ,
#define ZELDA_PP_INTERCEPT_COMMA_103 ,
#define ZELDA_PP_INTERCEPT_COMMA_104 ,
#define ZELDA_PP_INTERCEPT_COMMA_105 ,
#define ZELDA_PP_INTERCEPT_COMMA_106 ,
#define ZELDA_PP_INTERCEPT_COMMA_107 ,
#define ZELDA_PP_INTERCEPT_COMMA_108 ,
#define ZELDA_PP_INTERCEPT_COMMA_109 ,
#define ZELDA_PP_INTERCEPT_COMMA_110 ,
#define ZELDA_PP_INTERCEPT_COMMA_111 ,
#define ZELDA_PP_INTERCEPT_COMMA_112 ,
#define ZELDA_PP_INTERCEPT_COMMA_113 ,
#define ZELDA_PP_INTERCEPT_COMMA_114 ,
#define ZELDA_PP_INTERCEPT_COMMA_115 ,
#define ZELDA_PP_INTERCEPT_COMMA_116 ,
#define ZELDA_PP_INTERCEPT_COMMA_117 ,
#define ZELDA_PP_INTERCEPT_COMMA_118 ,
#define ZELDA_PP_INTERCEPT_COMMA_119 ,
#define ZELDA_PP_INTERCEPT_COMMA_120 ,
#define ZELDA_PP_INTERCEPT_COMMA_121 ,
#define ZELDA_PP_INTERCEPT_COMMA_122 ,
#define ZELDA_PP_INTERCEPT_COMMA_123 ,
#define ZELDA_PP_INTERCEPT_COMMA_124 ,
#define ZELDA_PP_INTERCEPT_COMMA_125 ,
#define ZELDA_PP_INTERCEPT_COMMA_126 ,
#define ZELDA_PP_INTERCEPT_COMMA_127 ,
#define ZELDA_PP_INTERCEPT_COMMA_128 ,
#define ZELDA_PP_INTERCEPT_COMMA_129 ,
#define ZELDA_PP_INTERCEPT_COMMA_130 ,
#define ZELDA_PP_INTERCEPT_COMMA_131 ,
#define ZELDA_PP_INTERCEPT_COMMA_132 ,
#define ZELDA_PP_INTERCEPT_COMMA_133 ,
#define ZELDA_PP_INTERCEPT_COMMA_134 ,
#define ZELDA_PP_INTERCEPT_COMMA_135 ,
#define ZELDA_PP_INTERCEPT_COMMA_136 ,
#define ZELDA_PP_INTERCEPT_COMMA_137 ,
#define ZELDA_PP_INTERCEPT_COMMA_138 ,
#define ZELDA_PP_INTERCEPT_COMMA_139 ,
#define ZELDA_PP_INTERCEPT_COMMA_140 ,
#define ZELDA_PP_INTERCEPT_COMMA_141 ,
#define ZELDA_PP_INTERCEPT_COMMA_142 ,
#define ZELDA_PP_INTERCEPT_COMMA_143 ,
#define ZELDA_PP_INTERCEPT_COMMA_144 ,
#define ZELDA_PP_INTERCEPT_COMMA_145 ,
#define ZELDA_PP_INTERCEPT_COMMA_146 ,
#define ZELDA_PP_INTERCEPT_COMMA_147 ,
#define ZELDA_PP_INTERCEPT_COMMA_148 ,
#define ZELDA_PP_INTERCEPT_COMMA_149 ,
#define ZELDA_PP_INTERCEPT_COMMA_150 ,
#define ZELDA_PP_INTERCEPT_COMMA_151 ,
#define ZELDA_PP_INTERCEPT_COMMA_152 ,
#define ZELDA_PP_INTERCEPT_COMMA_153 ,
#define ZELDA_PP_INTERCEPT_COMMA_154 ,
#define ZELDA_PP_INTERCEPT_COMMA_155 ,
#define ZELDA_PP_INTERCEPT_COMMA_156 ,
#define ZELDA_PP_INTERCEPT_COMMA_157 ,
#define ZELDA_PP_INTERCEPT_COMMA_158 ,
#define ZELDA_PP_INTERCEPT_COMMA_159 ,
#define ZELDA_PP_INTERCEPT_COMMA_160 ,
#define ZELDA_PP_INTERCEPT_COMMA_161 ,
#define ZELDA_PP_INTERCEPT_COMMA_162 ,
#define ZELDA_PP_INTERCEPT_COMMA_163 ,
#define ZELDA_PP_INTERCEPT_COMMA_164 ,
#define ZELDA_PP_INTERCEPT_COMMA_165 ,
#define ZELDA_PP_INTERCEPT_COMMA_166 ,
#define ZELDA_PP_INTERCEPT_COMMA_167 ,
#define ZELDA_PP_INTERCEPT_COMMA_168 ,
#define ZELDA_PP_INTERCEPT_COMMA_169 ,
#define ZELDA_PP_INTERCEPT_COMMA_170 ,
#define ZELDA_PP_INTERCEPT_COMMA_171 ,
#define ZELDA_PP_INTERCEPT_COMMA_172 ,
#define ZELDA_PP_INTERCEPT_COMMA_173 ,
#define ZELDA_PP_INTERCEPT_COMMA_174 ,
#define ZELDA_PP_INTERCEPT_COMMA_175 ,
#define ZELDA_PP_INTERCEPT_COMMA_176 ,
#define ZELDA_PP_INTERCEPT_COMMA_177 ,
#define ZELDA_PP_INTERCEPT_COMMA_178 ,
#define ZELDA_PP_INTERCEPT_COMMA_179 ,
#define ZELDA_PP_INTERCEPT_COMMA_180 ,
#define ZELDA_PP_INTERCEPT_COMMA_181 ,
#define ZELDA_PP_INTERCEPT_COMMA_182 ,
#define ZELDA_PP_INTERCEPT_COMMA_183 ,
#define ZELDA_PP_INTERCEPT_COMMA_184 ,
#define ZELDA_PP_INTERCEPT_COMMA_185 ,
#define ZELDA_PP_INTERCEPT_COMMA_186 ,
#define ZELDA_PP_INTERCEPT_COMMA_187 ,
#define ZELDA_PP_INTERCEPT_COMMA_188 ,
#define ZELDA_PP_INTERCEPT_COMMA_189 ,
#define ZELDA_PP_INTERCEPT_COMMA_190 ,
#define ZELDA_PP_INTERCEPT_COMMA_191 ,
#define ZELDA_PP_INTERCEPT_COMMA_192 ,
#define ZELDA_PP_INTERCEPT_COMMA_193 ,
#define ZELDA_PP_INTERCEPT_COMMA_194 ,
#define ZELDA_PP_INTERCEPT_COMMA_195 ,
#define ZELDA_PP_INTERCEPT_COMMA_196 ,
#define ZELDA_PP_INTERCEPT_COMMA_197 ,
#define ZELDA_PP_INTERCEPT_COMMA_198 ,
#define ZELDA_PP_INTERCEPT_COMMA_199 ,
#define ZELDA_PP_INTERCEPT_COMMA_200 ,
#define ZELDA_PP_INTERCEPT_COMMA_201 ,
#define ZELDA_PP_INTERCEPT_COMMA_202 ,
#define ZELDA_PP_INTERCEPT_COMMA_203 ,
#define ZELDA_PP_INTERCEPT_COMMA_204 ,
#define ZELDA_PP_INTERCEPT_COMMA_205 ,
#define ZELDA_PP_INTERCEPT_COMMA_206 ,
#define ZELDA_PP_INTERCEPT_COMMA_207 ,
#define ZELDA_PP_INTERCEPT_COMMA_208 ,
#define ZELDA_PP_INTERCEPT_COMMA_209 ,
#define ZELDA_PP_INTERCEPT_COMMA_210 ,
#define ZELDA_PP_INTERCEPT_COMMA_211 ,
#define ZELDA_PP_INTERCEPT_COMMA_212 ,
#define ZELDA_PP_INTERCEPT_COMMA_213 ,
#define ZELDA_PP_INTERCEPT_COMMA_214 ,
#define ZELDA_PP_INTERCEPT_COMMA_215 ,
#define ZELDA_PP_INTERCEPT_COMMA_216 ,
#define ZELDA_PP_INTERCEPT_COMMA_217 ,
#define ZELDA_PP_INTERCEPT_COMMA_218 ,
#define ZELDA_PP_INTERCEPT_COMMA_219 ,
#define ZELDA_PP_INTERCEPT_COMMA_220 ,
#define ZELDA_PP_INTERCEPT_COMMA_221 ,
#define ZELDA_PP_INTERCEPT_COMMA_222 ,
#define ZELDA_PP_INTERCEPT_COMMA_223 ,
#define ZELDA_PP_INTERCEPT_COMMA_224 ,
#define ZELDA_PP_INTERCEPT_COMMA_225 ,
#define ZELDA_PP_INTERCEPT_COMMA_226 ,
#define ZELDA_PP_INTERCEPT_COMMA_227 ,
#define ZELDA_PP_INTERCEPT_COMMA_228 ,
#define ZELDA_PP_INTERCEPT_COMMA_229 ,
#define ZELDA_PP_INTERCEPT_COMMA_230 ,
#define ZELDA_PP_INTERCEPT_COMMA_231 ,
#define ZELDA_PP_INTERCEPT_COMMA_232 ,
#define ZELDA_PP_INTERCEPT_COMMA_233 ,
#define ZELDA_PP_INTERCEPT_COMMA_234 ,
#define ZELDA_PP_INTERCEPT_COMMA_235 ,
#define ZELDA_PP_INTERCEPT_COMMA_236 ,
#define ZELDA_PP_INTERCEPT_COMMA_237 ,
#define ZELDA_PP_INTERCEPT_COMMA_238 ,
#define ZELDA_PP_INTERCEPT_COMMA_239 ,
#define ZELDA_PP_INTERCEPT_COMMA_240 ,
#define ZELDA_PP_INTERCEPT_COMMA_241 ,
#define ZELDA_PP_INTERCEPT_COMMA_242 ,
#define ZELDA_PP_INTERCEPT_COMMA_243 ,
#define ZELDA_PP_INTERCEPT_COMMA_244 ,
#define ZELDA_PP_INTERCEPT_COMMA_245 ,
#define ZELDA_PP_INTERCEPT_COMMA_246 ,
#define ZELDA_PP_INTERCEPT_COMMA_247 ,
#define ZELDA_PP_INTERCEPT_COMMA_248 ,
#define ZELDA_PP_INTERCEPT_COMMA_249 ,
#define ZELDA_PP_INTERCEPT_COMMA_250 ,
#define ZELDA_PP_INTERCEPT_COMMA_251 ,
#define ZELDA_PP_INTERCEPT_COMMA_252 ,
#define ZELDA_PP_INTERCEPT_COMMA_253 ,
#define ZELDA_PP_INTERCEPT_COMMA_254 ,
#define ZELDA_PP_INTERCEPT_COMMA_255 ,
#define ZELDA_PP_INTERCEPT_COMMA_256 ,


#define ZELDA_PP_SEQ_INDEX(seq) BOOST_PP_CAT(ZELDA_PP_SEQ_INDEX_0 seq, _END)

#define ZELDA_PP_SEQ_INDEX_0(x) (0, x) ZELDA_PP_SEQ_INDEX_1
#define ZELDA_PP_SEQ_INDEX_1(x) (1, x) ZELDA_PP_SEQ_INDEX_2
#define ZELDA_PP_SEQ_INDEX_2(x) (2, x) ZELDA_PP_SEQ_INDEX_3
#define ZELDA_PP_SEQ_INDEX_3(x) (3, x) ZELDA_PP_SEQ_INDEX_4
#define ZELDA_PP_SEQ_INDEX_4(x) (4, x) ZELDA_PP_SEQ_INDEX_5
#define ZELDA_PP_SEQ_INDEX_5(x) (5, x) ZELDA_PP_SEQ_INDEX_6
#define ZELDA_PP_SEQ_INDEX_6(x) (6, x) ZELDA_PP_SEQ_INDEX_7
#define ZELDA_PP_SEQ_INDEX_7(x) (7, x) ZELDA_PP_SEQ_INDEX_8
#define ZELDA_PP_SEQ_INDEX_8(x) (8, x) ZELDA_PP_SEQ_INDEX_9
#define ZELDA_PP_SEQ_INDEX_9(x) (9, x) ZELDA_PP_SEQ_INDEX_10
#define ZELDA_PP_SEQ_INDEX_10(x) (10, x) ZELDA_PP_SEQ_INDEX_11
#define ZELDA_PP_SEQ_INDEX_11(x) (11, x) ZELDA_PP_SEQ_INDEX_12
#define ZELDA_PP_SEQ_INDEX_12(x) (12, x) ZELDA_PP_SEQ_INDEX_13
#define ZELDA_PP_SEQ_INDEX_13(x) (13, x) ZELDA_PP_SEQ_INDEX_14
#define ZELDA_PP_SEQ_INDEX_14(x) (14, x) ZELDA_PP_SEQ_INDEX_15
#define ZELDA_PP_SEQ_INDEX_15(x) (15, x) ZELDA_PP_SEQ_INDEX_16
#define ZELDA_PP_SEQ_INDEX_16(x) (16, x) ZELDA_PP_SEQ_INDEX_17
#define ZELDA_PP_SEQ_INDEX_17(x) (17, x) ZELDA_PP_SEQ_INDEX_18
#define ZELDA_PP_SEQ_INDEX_18(x) (18, x) ZELDA_PP_SEQ_INDEX_19
#define ZELDA_PP_SEQ_INDEX_19(x) (19, x) ZELDA_PP_SEQ_INDEX_20
#define ZELDA_PP_SEQ_INDEX_20(x) (20, x) ZELDA_PP_SEQ_INDEX_21
#define ZELDA_PP_SEQ_INDEX_21(x) (21, x) ZELDA_PP_SEQ_INDEX_22
#define ZELDA_PP_SEQ_INDEX_22(x) (22, x) ZELDA_PP_SEQ_INDEX_23
#define ZELDA_PP_SEQ_INDEX_23(x) (23, x) ZELDA_PP_SEQ_INDEX_24
#define ZELDA_PP_SEQ_INDEX_24(x) (24, x) ZELDA_PP_SEQ_INDEX_25
#define ZELDA_PP_SEQ_INDEX_25(x) (25, x) ZELDA_PP_SEQ_INDEX_26
#define ZELDA_PP_SEQ_INDEX_26(x) (26, x) ZELDA_PP_SEQ_INDEX_27
#define ZELDA_PP_SEQ_INDEX_27(x) (27, x) ZELDA_PP_SEQ_INDEX_28
#define ZELDA_PP_SEQ_INDEX_28(x) (28, x) ZELDA_PP_SEQ_INDEX_29
#define ZELDA_PP_SEQ_INDEX_29(x) (29, x) ZELDA_PP_SEQ_INDEX_30
#define ZELDA_PP_SEQ_INDEX_30(x) (30, x) ZELDA_PP_SEQ_INDEX_31
#define ZELDA_PP_SEQ_INDEX_31(x) (31, x) ZELDA_PP_SEQ_INDEX_32
#define ZELDA_PP_SEQ_INDEX_32(x) (32, x) ZELDA_PP_SEQ_INDEX_33
#define ZELDA_PP_SEQ_INDEX_33(x) (33, x) ZELDA_PP_SEQ_INDEX_34
#define ZELDA_PP_SEQ_INDEX_34(x) (34, x) ZELDA_PP_SEQ_INDEX_35
#define ZELDA_PP_SEQ_INDEX_35(x) (35, x) ZELDA_PP_SEQ_INDEX_36
#define ZELDA_PP_SEQ_INDEX_36(x) (36, x) ZELDA_PP_SEQ_INDEX_37
#define ZELDA_PP_SEQ_INDEX_37(x) (37, x) ZELDA_PP_SEQ_INDEX_38
#define ZELDA_PP_SEQ_INDEX_38(x) (38, x) ZELDA_PP_SEQ_INDEX_39
#define ZELDA_PP_SEQ_INDEX_39(x) (39, x) ZELDA_PP_SEQ_INDEX_40
#define ZELDA_PP_SEQ_INDEX_40(x) (40, x) ZELDA_PP_SEQ_INDEX_41
#define ZELDA_PP_SEQ_INDEX_41(x) (41, x) ZELDA_PP_SEQ_INDEX_42
#define ZELDA_PP_SEQ_INDEX_42(x) (42, x) ZELDA_PP_SEQ_INDEX_43
#define ZELDA_PP_SEQ_INDEX_43(x) (43, x) ZELDA_PP_SEQ_INDEX_44
#define ZELDA_PP_SEQ_INDEX_44(x) (44, x) ZELDA_PP_SEQ_INDEX_45
#define ZELDA_PP_SEQ_INDEX_45(x) (45, x) ZELDA_PP_SEQ_INDEX_46
#define ZELDA_PP_SEQ_INDEX_46(x) (46, x) ZELDA_PP_SEQ_INDEX_47
#define ZELDA_PP_SEQ_INDEX_47(x) (47, x) ZELDA_PP_SEQ_INDEX_48
#define ZELDA_PP_SEQ_INDEX_48(x) (48, x) ZELDA_PP_SEQ_INDEX_49
#define ZELDA_PP_SEQ_INDEX_49(x) (49, x) ZELDA_PP_SEQ_INDEX_50
#define ZELDA_PP_SEQ_INDEX_50(x) (50, x) ZELDA_PP_SEQ_INDEX_51
#define ZELDA_PP_SEQ_INDEX_51(x) (51, x) ZELDA_PP_SEQ_INDEX_52
#define ZELDA_PP_SEQ_INDEX_52(x) (52, x) ZELDA_PP_SEQ_INDEX_53
#define ZELDA_PP_SEQ_INDEX_53(x) (53, x) ZELDA_PP_SEQ_INDEX_54
#define ZELDA_PP_SEQ_INDEX_54(x) (54, x) ZELDA_PP_SEQ_INDEX_55
#define ZELDA_PP_SEQ_INDEX_55(x) (55, x) ZELDA_PP_SEQ_INDEX_56
#define ZELDA_PP_SEQ_INDEX_56(x) (56, x) ZELDA_PP_SEQ_INDEX_57
#define ZELDA_PP_SEQ_INDEX_57(x) (57, x) ZELDA_PP_SEQ_INDEX_58
#define ZELDA_PP_SEQ_INDEX_58(x) (58, x) ZELDA_PP_SEQ_INDEX_59
#define ZELDA_PP_SEQ_INDEX_59(x) (59, x) ZELDA_PP_SEQ_INDEX_60
#define ZELDA_PP_SEQ_INDEX_60(x) (60, x) ZELDA_PP_SEQ_INDEX_61
#define ZELDA_PP_SEQ_INDEX_61(x) (61, x) ZELDA_PP_SEQ_INDEX_62
#define ZELDA_PP_SEQ_INDEX_62(x) (62, x) ZELDA_PP_SEQ_INDEX_63
#define ZELDA_PP_SEQ_INDEX_63(x) (63, x) ZELDA_PP_SEQ_INDEX_64
#define ZELDA_PP_SEQ_INDEX_64(x) (64, x) ZELDA_PP_SEQ_INDEX_65
#define ZELDA_PP_SEQ_INDEX_65(x) (65, x) ZELDA_PP_SEQ_INDEX_66
#define ZELDA_PP_SEQ_INDEX_66(x) (66, x) ZELDA_PP_SEQ_INDEX_67
#define ZELDA_PP_SEQ_INDEX_67(x) (67, x) ZELDA_PP_SEQ_INDEX_68
#define ZELDA_PP_SEQ_INDEX_68(x) (68, x) ZELDA_PP_SEQ_INDEX_69
#define ZELDA_PP_SEQ_INDEX_69(x) (69, x) ZELDA_PP_SEQ_INDEX_70
#define ZELDA_PP_SEQ_INDEX_70(x) (70, x) ZELDA_PP_SEQ_INDEX_71
#define ZELDA_PP_SEQ_INDEX_71(x) (71, x) ZELDA_PP_SEQ_INDEX_72
#define ZELDA_PP_SEQ_INDEX_72(x) (72, x) ZELDA_PP_SEQ_INDEX_73
#define ZELDA_PP_SEQ_INDEX_73(x) (73, x) ZELDA_PP_SEQ_INDEX_74
#define ZELDA_PP_SEQ_INDEX_74(x) (74, x) ZELDA_PP_SEQ_INDEX_75
#define ZELDA_PP_SEQ_INDEX_75(x) (75, x) ZELDA_PP_SEQ_INDEX_76
#define ZELDA_PP_SEQ_INDEX_76(x) (76, x) ZELDA_PP_SEQ_INDEX_77
#define ZELDA_PP_SEQ_INDEX_77(x) (77, x) ZELDA_PP_SEQ_INDEX_78
#define ZELDA_PP_SEQ_INDEX_78(x) (78, x) ZELDA_PP_SEQ_INDEX_79
#define ZELDA_PP_SEQ_INDEX_79(x) (79, x) ZELDA_PP_SEQ_INDEX_80
#define ZELDA_PP_SEQ_INDEX_80(x) (80, x) ZELDA_PP_SEQ_INDEX_81
#define ZELDA_PP_SEQ_INDEX_81(x) (81, x) ZELDA_PP_SEQ_INDEX_82
#define ZELDA_PP_SEQ_INDEX_82(x) (82, x) ZELDA_PP_SEQ_INDEX_83
#define ZELDA_PP_SEQ_INDEX_83(x) (83, x) ZELDA_PP_SEQ_INDEX_84
#define ZELDA_PP_SEQ_INDEX_84(x) (84, x) ZELDA_PP_SEQ_INDEX_85
#define ZELDA_PP_SEQ_INDEX_85(x) (85, x) ZELDA_PP_SEQ_INDEX_86
#define ZELDA_PP_SEQ_INDEX_86(x) (86, x) ZELDA_PP_SEQ_INDEX_87
#define ZELDA_PP_SEQ_INDEX_87(x) (87, x) ZELDA_PP_SEQ_INDEX_88
#define ZELDA_PP_SEQ_INDEX_88(x) (88, x) ZELDA_PP_SEQ_INDEX_89
#define ZELDA_PP_SEQ_INDEX_89(x) (89, x) ZELDA_PP_SEQ_INDEX_90
#define ZELDA_PP_SEQ_INDEX_90(x) (90, x) ZELDA_PP_SEQ_INDEX_91
#define ZELDA_PP_SEQ_INDEX_91(x) (91, x) ZELDA_PP_SEQ_INDEX_92
#define ZELDA_PP_SEQ_INDEX_92(x) (92, x) ZELDA_PP_SEQ_INDEX_93
#define ZELDA_PP_SEQ_INDEX_93(x) (93, x) ZELDA_PP_SEQ_INDEX_94
#define ZELDA_PP_SEQ_INDEX_94(x) (94, x) ZELDA_PP_SEQ_INDEX_95
#define ZELDA_PP_SEQ_INDEX_95(x) (95, x) ZELDA_PP_SEQ_INDEX_96
#define ZELDA_PP_SEQ_INDEX_96(x) (96, x) ZELDA_PP_SEQ_INDEX_97
#define ZELDA_PP_SEQ_INDEX_97(x) (97, x) ZELDA_PP_SEQ_INDEX_98
#define ZELDA_PP_SEQ_INDEX_98(x) (98, x) ZELDA_PP_SEQ_INDEX_99
#define ZELDA_PP_SEQ_INDEX_99(x) (99, x) ZELDA_PP_SEQ_INDEX_100
#define ZELDA_PP_SEQ_INDEX_100(x) (100, x) ZELDA_PP_SEQ_INDEX_101
#define ZELDA_PP_SEQ_INDEX_101(x) (101, x) ZELDA_PP_SEQ_INDEX_102
#define ZELDA_PP_SEQ_INDEX_102(x) (102, x) ZELDA_PP_SEQ_INDEX_103
#define ZELDA_PP_SEQ_INDEX_103(x) (103, x) ZELDA_PP_SEQ_INDEX_104
#define ZELDA_PP_SEQ_INDEX_104(x) (104, x) ZELDA_PP_SEQ_INDEX_105
#define ZELDA_PP_SEQ_INDEX_105(x) (105, x) ZELDA_PP_SEQ_INDEX_106
#define ZELDA_PP_SEQ_INDEX_106(x) (106, x) ZELDA_PP_SEQ_INDEX_107
#define ZELDA_PP_SEQ_INDEX_107(x) (107, x) ZELDA_PP_SEQ_INDEX_108
#define ZELDA_PP_SEQ_INDEX_108(x) (108, x) ZELDA_PP_SEQ_INDEX_109
#define ZELDA_PP_SEQ_INDEX_109(x) (109, x) ZELDA_PP_SEQ_INDEX_110
#define ZELDA_PP_SEQ_INDEX_110(x) (110, x) ZELDA_PP_SEQ_INDEX_111
#define ZELDA_PP_SEQ_INDEX_111(x) (111, x) ZELDA_PP_SEQ_INDEX_112
#define ZELDA_PP_SEQ_INDEX_112(x) (112, x) ZELDA_PP_SEQ_INDEX_113
#define ZELDA_PP_SEQ_INDEX_113(x) (113, x) ZELDA_PP_SEQ_INDEX_114
#define ZELDA_PP_SEQ_INDEX_114(x) (114, x) ZELDA_PP_SEQ_INDEX_115
#define ZELDA_PP_SEQ_INDEX_115(x) (115, x) ZELDA_PP_SEQ_INDEX_116
#define ZELDA_PP_SEQ_INDEX_116(x) (116, x) ZELDA_PP_SEQ_INDEX_117
#define ZELDA_PP_SEQ_INDEX_117(x) (117, x) ZELDA_PP_SEQ_INDEX_118
#define ZELDA_PP_SEQ_INDEX_118(x) (118, x) ZELDA_PP_SEQ_INDEX_119
#define ZELDA_PP_SEQ_INDEX_119(x) (119, x) ZELDA_PP_SEQ_INDEX_120
#define ZELDA_PP_SEQ_INDEX_120(x) (120, x) ZELDA_PP_SEQ_INDEX_121
#define ZELDA_PP_SEQ_INDEX_121(x) (121, x) ZELDA_PP_SEQ_INDEX_122
#define ZELDA_PP_SEQ_INDEX_122(x) (122, x) ZELDA_PP_SEQ_INDEX_123
#define ZELDA_PP_SEQ_INDEX_123(x) (123, x) ZELDA_PP_SEQ_INDEX_124
#define ZELDA_PP_SEQ_INDEX_124(x) (124, x) ZELDA_PP_SEQ_INDEX_125
#define ZELDA_PP_SEQ_INDEX_125(x) (125, x) ZELDA_PP_SEQ_INDEX_126
#define ZELDA_PP_SEQ_INDEX_126(x) (126, x) ZELDA_PP_SEQ_INDEX_127
#define ZELDA_PP_SEQ_INDEX_127(x) (127, x) ZELDA_PP_SEQ_INDEX_128
#define ZELDA_PP_SEQ_INDEX_128(x) (128, x) ZELDA_PP_SEQ_INDEX_129
#define ZELDA_PP_SEQ_INDEX_129(x) (129, x) ZELDA_PP_SEQ_INDEX_130
#define ZELDA_PP_SEQ_INDEX_130(x) (130, x) ZELDA_PP_SEQ_INDEX_131
#define ZELDA_PP_SEQ_INDEX_131(x) (131, x) ZELDA_PP_SEQ_INDEX_132
#define ZELDA_PP_SEQ_INDEX_132(x) (132, x) ZELDA_PP_SEQ_INDEX_133
#define ZELDA_PP_SEQ_INDEX_133(x) (133, x) ZELDA_PP_SEQ_INDEX_134
#define ZELDA_PP_SEQ_INDEX_134(x) (134, x) ZELDA_PP_SEQ_INDEX_135
#define ZELDA_PP_SEQ_INDEX_135(x) (135, x) ZELDA_PP_SEQ_INDEX_136
#define ZELDA_PP_SEQ_INDEX_136(x) (136, x) ZELDA_PP_SEQ_INDEX_137
#define ZELDA_PP_SEQ_INDEX_137(x) (137, x) ZELDA_PP_SEQ_INDEX_138
#define ZELDA_PP_SEQ_INDEX_138(x) (138, x) ZELDA_PP_SEQ_INDEX_139
#define ZELDA_PP_SEQ_INDEX_139(x) (139, x) ZELDA_PP_SEQ_INDEX_140
#define ZELDA_PP_SEQ_INDEX_140(x) (140, x) ZELDA_PP_SEQ_INDEX_141
#define ZELDA_PP_SEQ_INDEX_141(x) (141, x) ZELDA_PP_SEQ_INDEX_142
#define ZELDA_PP_SEQ_INDEX_142(x) (142, x) ZELDA_PP_SEQ_INDEX_143
#define ZELDA_PP_SEQ_INDEX_143(x) (143, x) ZELDA_PP_SEQ_INDEX_144
#define ZELDA_PP_SEQ_INDEX_144(x) (144, x) ZELDA_PP_SEQ_INDEX_145
#define ZELDA_PP_SEQ_INDEX_145(x) (145, x) ZELDA_PP_SEQ_INDEX_146
#define ZELDA_PP_SEQ_INDEX_146(x) (146, x) ZELDA_PP_SEQ_INDEX_147
#define ZELDA_PP_SEQ_INDEX_147(x) (147, x) ZELDA_PP_SEQ_INDEX_148
#define ZELDA_PP_SEQ_INDEX_148(x) (148, x) ZELDA_PP_SEQ_INDEX_149
#define ZELDA_PP_SEQ_INDEX_149(x) (149, x) ZELDA_PP_SEQ_INDEX_150
#define ZELDA_PP_SEQ_INDEX_150(x) (150, x) ZELDA_PP_SEQ_INDEX_151
#define ZELDA_PP_SEQ_INDEX_151(x) (151, x) ZELDA_PP_SEQ_INDEX_152
#define ZELDA_PP_SEQ_INDEX_152(x) (152, x) ZELDA_PP_SEQ_INDEX_153
#define ZELDA_PP_SEQ_INDEX_153(x) (153, x) ZELDA_PP_SEQ_INDEX_154
#define ZELDA_PP_SEQ_INDEX_154(x) (154, x) ZELDA_PP_SEQ_INDEX_155
#define ZELDA_PP_SEQ_INDEX_155(x) (155, x) ZELDA_PP_SEQ_INDEX_156
#define ZELDA_PP_SEQ_INDEX_156(x) (156, x) ZELDA_PP_SEQ_INDEX_157
#define ZELDA_PP_SEQ_INDEX_157(x) (157, x) ZELDA_PP_SEQ_INDEX_158
#define ZELDA_PP_SEQ_INDEX_158(x) (158, x) ZELDA_PP_SEQ_INDEX_159
#define ZELDA_PP_SEQ_INDEX_159(x) (159, x) ZELDA_PP_SEQ_INDEX_160
#define ZELDA_PP_SEQ_INDEX_160(x) (160, x) ZELDA_PP_SEQ_INDEX_161
#define ZELDA_PP_SEQ_INDEX_161(x) (161, x) ZELDA_PP_SEQ_INDEX_162
#define ZELDA_PP_SEQ_INDEX_162(x) (162, x) ZELDA_PP_SEQ_INDEX_163
#define ZELDA_PP_SEQ_INDEX_163(x) (163, x) ZELDA_PP_SEQ_INDEX_164
#define ZELDA_PP_SEQ_INDEX_164(x) (164, x) ZELDA_PP_SEQ_INDEX_165
#define ZELDA_PP_SEQ_INDEX_165(x) (165, x) ZELDA_PP_SEQ_INDEX_166
#define ZELDA_PP_SEQ_INDEX_166(x) (166, x) ZELDA_PP_SEQ_INDEX_167
#define ZELDA_PP_SEQ_INDEX_167(x) (167, x) ZELDA_PP_SEQ_INDEX_168
#define ZELDA_PP_SEQ_INDEX_168(x) (168, x) ZELDA_PP_SEQ_INDEX_169
#define ZELDA_PP_SEQ_INDEX_169(x) (169, x) ZELDA_PP_SEQ_INDEX_170
#define ZELDA_PP_SEQ_INDEX_170(x) (170, x) ZELDA_PP_SEQ_INDEX_171
#define ZELDA_PP_SEQ_INDEX_171(x) (171, x) ZELDA_PP_SEQ_INDEX_172
#define ZELDA_PP_SEQ_INDEX_172(x) (172, x) ZELDA_PP_SEQ_INDEX_173
#define ZELDA_PP_SEQ_INDEX_173(x) (173, x) ZELDA_PP_SEQ_INDEX_174
#define ZELDA_PP_SEQ_INDEX_174(x) (174, x) ZELDA_PP_SEQ_INDEX_175
#define ZELDA_PP_SEQ_INDEX_175(x) (175, x) ZELDA_PP_SEQ_INDEX_176
#define ZELDA_PP_SEQ_INDEX_176(x) (176, x) ZELDA_PP_SEQ_INDEX_177
#define ZELDA_PP_SEQ_INDEX_177(x) (177, x) ZELDA_PP_SEQ_INDEX_178
#define ZELDA_PP_SEQ_INDEX_178(x) (178, x) ZELDA_PP_SEQ_INDEX_179
#define ZELDA_PP_SEQ_INDEX_179(x) (179, x) ZELDA_PP_SEQ_INDEX_180
#define ZELDA_PP_SEQ_INDEX_180(x) (180, x) ZELDA_PP_SEQ_INDEX_181
#define ZELDA_PP_SEQ_INDEX_181(x) (181, x) ZELDA_PP_SEQ_INDEX_182
#define ZELDA_PP_SEQ_INDEX_182(x) (182, x) ZELDA_PP_SEQ_INDEX_183
#define ZELDA_PP_SEQ_INDEX_183(x) (183, x) ZELDA_PP_SEQ_INDEX_184
#define ZELDA_PP_SEQ_INDEX_184(x) (184, x) ZELDA_PP_SEQ_INDEX_185
#define ZELDA_PP_SEQ_INDEX_185(x) (185, x) ZELDA_PP_SEQ_INDEX_186
#define ZELDA_PP_SEQ_INDEX_186(x) (186, x) ZELDA_PP_SEQ_INDEX_187
#define ZELDA_PP_SEQ_INDEX_187(x) (187, x) ZELDA_PP_SEQ_INDEX_188
#define ZELDA_PP_SEQ_INDEX_188(x) (188, x) ZELDA_PP_SEQ_INDEX_189
#define ZELDA_PP_SEQ_INDEX_189(x) (189, x) ZELDA_PP_SEQ_INDEX_190
#define ZELDA_PP_SEQ_INDEX_190(x) (190, x) ZELDA_PP_SEQ_INDEX_191
#define ZELDA_PP_SEQ_INDEX_191(x) (191, x) ZELDA_PP_SEQ_INDEX_192
#define ZELDA_PP_SEQ_INDEX_192(x) (192, x) ZELDA_PP_SEQ_INDEX_193
#define ZELDA_PP_SEQ_INDEX_193(x) (193, x) ZELDA_PP_SEQ_INDEX_194
#define ZELDA_PP_SEQ_INDEX_194(x) (194, x) ZELDA_PP_SEQ_INDEX_195
#define ZELDA_PP_SEQ_INDEX_195(x) (195, x) ZELDA_PP_SEQ_INDEX_196
#define ZELDA_PP_SEQ_INDEX_196(x) (196, x) ZELDA_PP_SEQ_INDEX_197
#define ZELDA_PP_SEQ_INDEX_197(x) (197, x) ZELDA_PP_SEQ_INDEX_198
#define ZELDA_PP_SEQ_INDEX_198(x) (198, x) ZELDA_PP_SEQ_INDEX_199
#define ZELDA_PP_SEQ_INDEX_199(x) (199, x) ZELDA_PP_SEQ_INDEX_200
#define ZELDA_PP_SEQ_INDEX_200(x) (200, x) ZELDA_PP_SEQ_INDEX_201
#define ZELDA_PP_SEQ_INDEX_201(x) (201, x) ZELDA_PP_SEQ_INDEX_202
#define ZELDA_PP_SEQ_INDEX_202(x) (202, x) ZELDA_PP_SEQ_INDEX_203
#define ZELDA_PP_SEQ_INDEX_203(x) (203, x) ZELDA_PP_SEQ_INDEX_204
#define ZELDA_PP_SEQ_INDEX_204(x) (204, x) ZELDA_PP_SEQ_INDEX_205
#define ZELDA_PP_SEQ_INDEX_205(x) (205, x) ZELDA_PP_SEQ_INDEX_206
#define ZELDA_PP_SEQ_INDEX_206(x) (206, x) ZELDA_PP_SEQ_INDEX_207
#define ZELDA_PP_SEQ_INDEX_207(x) (207, x) ZELDA_PP_SEQ_INDEX_208
#define ZELDA_PP_SEQ_INDEX_208(x) (208, x) ZELDA_PP_SEQ_INDEX_209
#define ZELDA_PP_SEQ_INDEX_209(x) (209, x) ZELDA_PP_SEQ_INDEX_210
#define ZELDA_PP_SEQ_INDEX_210(x) (210, x) ZELDA_PP_SEQ_INDEX_211
#define ZELDA_PP_SEQ_INDEX_211(x) (211, x) ZELDA_PP_SEQ_INDEX_212
#define ZELDA_PP_SEQ_INDEX_212(x) (212, x) ZELDA_PP_SEQ_INDEX_213
#define ZELDA_PP_SEQ_INDEX_213(x) (213, x) ZELDA_PP_SEQ_INDEX_214
#define ZELDA_PP_SEQ_INDEX_214(x) (214, x) ZELDA_PP_SEQ_INDEX_215
#define ZELDA_PP_SEQ_INDEX_215(x) (215, x) ZELDA_PP_SEQ_INDEX_216
#define ZELDA_PP_SEQ_INDEX_216(x) (216, x) ZELDA_PP_SEQ_INDEX_217
#define ZELDA_PP_SEQ_INDEX_217(x) (217, x) ZELDA_PP_SEQ_INDEX_218
#define ZELDA_PP_SEQ_INDEX_218(x) (218, x) ZELDA_PP_SEQ_INDEX_219
#define ZELDA_PP_SEQ_INDEX_219(x) (219, x) ZELDA_PP_SEQ_INDEX_220
#define ZELDA_PP_SEQ_INDEX_220(x) (220, x) ZELDA_PP_SEQ_INDEX_221
#define ZELDA_PP_SEQ_INDEX_221(x) (221, x) ZELDA_PP_SEQ_INDEX_222
#define ZELDA_PP_SEQ_INDEX_222(x) (222, x) ZELDA_PP_SEQ_INDEX_223
#define ZELDA_PP_SEQ_INDEX_223(x) (223, x) ZELDA_PP_SEQ_INDEX_224
#define ZELDA_PP_SEQ_INDEX_224(x) (224, x) ZELDA_PP_SEQ_INDEX_225
#define ZELDA_PP_SEQ_INDEX_225(x) (225, x) ZELDA_PP_SEQ_INDEX_226
#define ZELDA_PP_SEQ_INDEX_226(x) (226, x) ZELDA_PP_SEQ_INDEX_227
#define ZELDA_PP_SEQ_INDEX_227(x) (227, x) ZELDA_PP_SEQ_INDEX_228
#define ZELDA_PP_SEQ_INDEX_228(x) (228, x) ZELDA_PP_SEQ_INDEX_229
#define ZELDA_PP_SEQ_INDEX_229(x) (229, x) ZELDA_PP_SEQ_INDEX_230
#define ZELDA_PP_SEQ_INDEX_230(x) (230, x) ZELDA_PP_SEQ_INDEX_231
#define ZELDA_PP_SEQ_INDEX_231(x) (231, x) ZELDA_PP_SEQ_INDEX_232
#define ZELDA_PP_SEQ_INDEX_232(x) (232, x) ZELDA_PP_SEQ_INDEX_233
#define ZELDA_PP_SEQ_INDEX_233(x) (233, x) ZELDA_PP_SEQ_INDEX_234
#define ZELDA_PP_SEQ_INDEX_234(x) (234, x) ZELDA_PP_SEQ_INDEX_235
#define ZELDA_PP_SEQ_INDEX_235(x) (235, x) ZELDA_PP_SEQ_INDEX_236
#define ZELDA_PP_SEQ_INDEX_236(x) (236, x) ZELDA_PP_SEQ_INDEX_237
#define ZELDA_PP_SEQ_INDEX_237(x) (237, x) ZELDA_PP_SEQ_INDEX_238
#define ZELDA_PP_SEQ_INDEX_238(x) (238, x) ZELDA_PP_SEQ_INDEX_239
#define ZELDA_PP_SEQ_INDEX_239(x) (239, x) ZELDA_PP_SEQ_INDEX_240
#define ZELDA_PP_SEQ_INDEX_240(x) (240, x) ZELDA_PP_SEQ_INDEX_241
#define ZELDA_PP_SEQ_INDEX_241(x) (241, x) ZELDA_PP_SEQ_INDEX_242
#define ZELDA_PP_SEQ_INDEX_242(x) (242, x) ZELDA_PP_SEQ_INDEX_243
#define ZELDA_PP_SEQ_INDEX_243(x) (243, x) ZELDA_PP_SEQ_INDEX_244
#define ZELDA_PP_SEQ_INDEX_244(x) (244, x) ZELDA_PP_SEQ_INDEX_245
#define ZELDA_PP_SEQ_INDEX_245(x) (245, x) ZELDA_PP_SEQ_INDEX_246
#define ZELDA_PP_SEQ_INDEX_246(x) (246, x) ZELDA_PP_SEQ_INDEX_247
#define ZELDA_PP_SEQ_INDEX_247(x) (247, x) ZELDA_PP_SEQ_INDEX_248
#define ZELDA_PP_SEQ_INDEX_248(x) (248, x) ZELDA_PP_SEQ_INDEX_249
#define ZELDA_PP_SEQ_INDEX_249(x) (249, x) ZELDA_PP_SEQ_INDEX_250
#define ZELDA_PP_SEQ_INDEX_250(x) (250, x) ZELDA_PP_SEQ_INDEX_251
#define ZELDA_PP_SEQ_INDEX_251(x) (251, x) ZELDA_PP_SEQ_INDEX_252
#define ZELDA_PP_SEQ_INDEX_252(x) (252, x) ZELDA_PP_SEQ_INDEX_253
#define ZELDA_PP_SEQ_INDEX_253(x) (253, x) ZELDA_PP_SEQ_INDEX_254
#define ZELDA_PP_SEQ_INDEX_254(x) (254, x) ZELDA_PP_SEQ_INDEX_255
#define ZELDA_PP_SEQ_INDEX_255(x) (255, x) ZELDA_PP_SEQ_INDEX_256

#define ZELDA_PP_SEQ_INDEX_0_END 
#define ZELDA_PP_SEQ_INDEX_1_END 
#define ZELDA_PP_SEQ_INDEX_2_END 
#define ZELDA_PP_SEQ_INDEX_3_END 
#define ZELDA_PP_SEQ_INDEX_4_END 
#define ZELDA_PP_SEQ_INDEX_5_END 
#define ZELDA_PP_SEQ_INDEX_6_END 
#define ZELDA_PP_SEQ_INDEX_7_END 
#define ZELDA_PP_SEQ_INDEX_8_END 
#define ZELDA_PP_SEQ_INDEX_9_END 
#define ZELDA_PP_SEQ_INDEX_10_END 
#define ZELDA_PP_SEQ_INDEX_11_END 
#define ZELDA_PP_SEQ_INDEX_12_END 
#define ZELDA_PP_SEQ_INDEX_13_END 
#define ZELDA_PP_SEQ_INDEX_14_END 
#define ZELDA_PP_SEQ_INDEX_15_END 
#define ZELDA_PP_SEQ_INDEX_16_END 
#define ZELDA_PP_SEQ_INDEX_17_END 
#define ZELDA_PP_SEQ_INDEX_18_END 
#define ZELDA_PP_SEQ_INDEX_19_END 
#define ZELDA_PP_SEQ_INDEX_20_END 
#define ZELDA_PP_SEQ_INDEX_21_END 
#define ZELDA_PP_SEQ_INDEX_22_END 
#define ZELDA_PP_SEQ_INDEX_23_END 
#define ZELDA_PP_SEQ_INDEX_24_END 
#define ZELDA_PP_SEQ_INDEX_25_END 
#define ZELDA_PP_SEQ_INDEX_26_END 
#define ZELDA_PP_SEQ_INDEX_27_END 
#define ZELDA_PP_SEQ_INDEX_28_END 
#define ZELDA_PP_SEQ_INDEX_29_END 
#define ZELDA_PP_SEQ_INDEX_30_END 
#define ZELDA_PP_SEQ_INDEX_31_END 
#define ZELDA_PP_SEQ_INDEX_32_END 
#define ZELDA_PP_SEQ_INDEX_33_END 
#define ZELDA_PP_SEQ_INDEX_34_END 
#define ZELDA_PP_SEQ_INDEX_35_END 
#define ZELDA_PP_SEQ_INDEX_36_END 
#define ZELDA_PP_SEQ_INDEX_37_END 
#define ZELDA_PP_SEQ_INDEX_38_END 
#define ZELDA_PP_SEQ_INDEX_39_END 
#define ZELDA_PP_SEQ_INDEX_40_END 
#define ZELDA_PP_SEQ_INDEX_41_END 
#define ZELDA_PP_SEQ_INDEX_42_END 
#define ZELDA_PP_SEQ_INDEX_43_END 
#define ZELDA_PP_SEQ_INDEX_44_END 
#define ZELDA_PP_SEQ_INDEX_45_END 
#define ZELDA_PP_SEQ_INDEX_46_END 
#define ZELDA_PP_SEQ_INDEX_47_END 
#define ZELDA_PP_SEQ_INDEX_48_END 
#define ZELDA_PP_SEQ_INDEX_49_END 
#define ZELDA_PP_SEQ_INDEX_50_END 
#define ZELDA_PP_SEQ_INDEX_51_END 
#define ZELDA_PP_SEQ_INDEX_52_END 
#define ZELDA_PP_SEQ_INDEX_53_END 
#define ZELDA_PP_SEQ_INDEX_54_END 
#define ZELDA_PP_SEQ_INDEX_55_END 
#define ZELDA_PP_SEQ_INDEX_56_END 
#define ZELDA_PP_SEQ_INDEX_57_END 
#define ZELDA_PP_SEQ_INDEX_58_END 
#define ZELDA_PP_SEQ_INDEX_59_END 
#define ZELDA_PP_SEQ_INDEX_60_END 
#define ZELDA_PP_SEQ_INDEX_61_END 
#define ZELDA_PP_SEQ_INDEX_62_END 
#define ZELDA_PP_SEQ_INDEX_63_END 
#define ZELDA_PP_SEQ_INDEX_64_END 
#define ZELDA_PP_SEQ_INDEX_65_END 
#define ZELDA_PP_SEQ_INDEX_66_END 
#define ZELDA_PP_SEQ_INDEX_67_END 
#define ZELDA_PP_SEQ_INDEX_68_END 
#define ZELDA_PP_SEQ_INDEX_69_END 
#define ZELDA_PP_SEQ_INDEX_70_END 
#define ZELDA_PP_SEQ_INDEX_71_END 
#define ZELDA_PP_SEQ_INDEX_72_END 
#define ZELDA_PP_SEQ_INDEX_73_END 
#define ZELDA_PP_SEQ_INDEX_74_END 
#define ZELDA_PP_SEQ_INDEX_75_END 
#define ZELDA_PP_SEQ_INDEX_76_END 
#define ZELDA_PP_SEQ_INDEX_77_END 
#define ZELDA_PP_SEQ_INDEX_78_END 
#define ZELDA_PP_SEQ_INDEX_79_END 
#define ZELDA_PP_SEQ_INDEX_80_END 
#define ZELDA_PP_SEQ_INDEX_81_END 
#define ZELDA_PP_SEQ_INDEX_82_END 
#define ZELDA_PP_SEQ_INDEX_83_END 
#define ZELDA_PP_SEQ_INDEX_84_END 
#define ZELDA_PP_SEQ_INDEX_85_END 
#define ZELDA_PP_SEQ_INDEX_86_END 
#define ZELDA_PP_SEQ_INDEX_87_END 
#define ZELDA_PP_SEQ_INDEX_88_END 
#define ZELDA_PP_SEQ_INDEX_89_END 
#define ZELDA_PP_SEQ_INDEX_90_END 
#define ZELDA_PP_SEQ_INDEX_91_END 
#define ZELDA_PP_SEQ_INDEX_92_END 
#define ZELDA_PP_SEQ_INDEX_93_END 
#define ZELDA_PP_SEQ_INDEX_94_END 
#define ZELDA_PP_SEQ_INDEX_95_END 
#define ZELDA_PP_SEQ_INDEX_96_END 
#define ZELDA_PP_SEQ_INDEX_97_END 
#define ZELDA_PP_SEQ_INDEX_98_END 
#define ZELDA_PP_SEQ_INDEX_99_END 
#define ZELDA_PP_SEQ_INDEX_100_END 
#define ZELDA_PP_SEQ_INDEX_101_END 
#define ZELDA_PP_SEQ_INDEX_102_END 
#define ZELDA_PP_SEQ_INDEX_103_END 
#define ZELDA_PP_SEQ_INDEX_104_END 
#define ZELDA_PP_SEQ_INDEX_105_END 
#define ZELDA_PP_SEQ_INDEX_106_END 
#define ZELDA_PP_SEQ_INDEX_107_END 
#define ZELDA_PP_SEQ_INDEX_108_END 
#define ZELDA_PP_SEQ_INDEX_109_END 
#define ZELDA_PP_SEQ_INDEX_110_END 
#define ZELDA_PP_SEQ_INDEX_111_END 
#define ZELDA_PP_SEQ_INDEX_112_END 
#define ZELDA_PP_SEQ_INDEX_113_END 
#define ZELDA_PP_SEQ_INDEX_114_END 
#define ZELDA_PP_SEQ_INDEX_115_END 
#define ZELDA_PP_SEQ_INDEX_116_END 
#define ZELDA_PP_SEQ_INDEX_117_END 
#define ZELDA_PP_SEQ_INDEX_118_END 
#define ZELDA_PP_SEQ_INDEX_119_END 
#define ZELDA_PP_SEQ_INDEX_120_END 
#define ZELDA_PP_SEQ_INDEX_121_END 
#define ZELDA_PP_SEQ_INDEX_122_END 
#define ZELDA_PP_SEQ_INDEX_123_END 
#define ZELDA_PP_SEQ_INDEX_124_END 
#define ZELDA_PP_SEQ_INDEX_125_END 
#define ZELDA_PP_SEQ_INDEX_126_END 
#define ZELDA_PP_SEQ_INDEX_127_END 
#define ZELDA_PP_SEQ_INDEX_128_END 
#define ZELDA_PP_SEQ_INDEX_129_END 
#define ZELDA_PP_SEQ_INDEX_130_END 
#define ZELDA_PP_SEQ_INDEX_131_END 
#define ZELDA_PP_SEQ_INDEX_132_END 
#define ZELDA_PP_SEQ_INDEX_133_END 
#define ZELDA_PP_SEQ_INDEX_134_END 
#define ZELDA_PP_SEQ_INDEX_135_END 
#define ZELDA_PP_SEQ_INDEX_136_END 
#define ZELDA_PP_SEQ_INDEX_137_END 
#define ZELDA_PP_SEQ_INDEX_138_END 
#define ZELDA_PP_SEQ_INDEX_139_END 
#define ZELDA_PP_SEQ_INDEX_140_END 
#define ZELDA_PP_SEQ_INDEX_141_END 
#define ZELDA_PP_SEQ_INDEX_142_END 
#define ZELDA_PP_SEQ_INDEX_143_END 
#define ZELDA_PP_SEQ_INDEX_144_END 
#define ZELDA_PP_SEQ_INDEX_145_END 
#define ZELDA_PP_SEQ_INDEX_146_END 
#define ZELDA_PP_SEQ_INDEX_147_END 
#define ZELDA_PP_SEQ_INDEX_148_END 
#define ZELDA_PP_SEQ_INDEX_149_END 
#define ZELDA_PP_SEQ_INDEX_150_END 
#define ZELDA_PP_SEQ_INDEX_151_END 
#define ZELDA_PP_SEQ_INDEX_152_END 
#define ZELDA_PP_SEQ_INDEX_153_END 
#define ZELDA_PP_SEQ_INDEX_154_END 
#define ZELDA_PP_SEQ_INDEX_155_END 
#define ZELDA_PP_SEQ_INDEX_156_END 
#define ZELDA_PP_SEQ_INDEX_157_END 
#define ZELDA_PP_SEQ_INDEX_158_END 
#define ZELDA_PP_SEQ_INDEX_159_END 
#define ZELDA_PP_SEQ_INDEX_160_END 
#define ZELDA_PP_SEQ_INDEX_161_END 
#define ZELDA_PP_SEQ_INDEX_162_END 
#define ZELDA_PP_SEQ_INDEX_163_END 
#define ZELDA_PP_SEQ_INDEX_164_END 
#define ZELDA_PP_SEQ_INDEX_165_END 
#define ZELDA_PP_SEQ_INDEX_166_END 
#define ZELDA_PP_SEQ_INDEX_167_END 
#define ZELDA_PP_SEQ_INDEX_168_END 
#define ZELDA_PP_SEQ_INDEX_169_END 
#define ZELDA_PP_SEQ_INDEX_170_END 
#define ZELDA_PP_SEQ_INDEX_171_END 
#define ZELDA_PP_SEQ_INDEX_172_END 
#define ZELDA_PP_SEQ_INDEX_173_END 
#define ZELDA_PP_SEQ_INDEX_174_END 
#define ZELDA_PP_SEQ_INDEX_175_END 
#define ZELDA_PP_SEQ_INDEX_176_END 
#define ZELDA_PP_SEQ_INDEX_177_END 
#define ZELDA_PP_SEQ_INDEX_178_END 
#define ZELDA_PP_SEQ_INDEX_179_END 
#define ZELDA_PP_SEQ_INDEX_180_END 
#define ZELDA_PP_SEQ_INDEX_181_END 
#define ZELDA_PP_SEQ_INDEX_182_END 
#define ZELDA_PP_SEQ_INDEX_183_END 
#define ZELDA_PP_SEQ_INDEX_184_END 
#define ZELDA_PP_SEQ_INDEX_185_END 
#define ZELDA_PP_SEQ_INDEX_186_END 
#define ZELDA_PP_SEQ_INDEX_187_END 
#define ZELDA_PP_SEQ_INDEX_188_END 
#define ZELDA_PP_SEQ_INDEX_189_END 
#define ZELDA_PP_SEQ_INDEX_190_END 
#define ZELDA_PP_SEQ_INDEX_191_END 
#define ZELDA_PP_SEQ_INDEX_192_END 
#define ZELDA_PP_SEQ_INDEX_193_END 
#define ZELDA_PP_SEQ_INDEX_194_END 
#define ZELDA_PP_SEQ_INDEX_195_END 
#define ZELDA_PP_SEQ_INDEX_196_END 
#define ZELDA_PP_SEQ_INDEX_197_END 
#define ZELDA_PP_SEQ_INDEX_198_END 
#define ZELDA_PP_SEQ_INDEX_199_END 
#define ZELDA_PP_SEQ_INDEX_200_END 
#define ZELDA_PP_SEQ_INDEX_201_END 
#define ZELDA_PP_SEQ_INDEX_202_END 
#define ZELDA_PP_SEQ_INDEX_203_END 
#define ZELDA_PP_SEQ_INDEX_204_END 
#define ZELDA_PP_SEQ_INDEX_205_END 
#define ZELDA_PP_SEQ_INDEX_206_END 
#define ZELDA_PP_SEQ_INDEX_207_END 
#define ZELDA_PP_SEQ_INDEX_208_END 
#define ZELDA_PP_SEQ_INDEX_209_END 
#define ZELDA_PP_SEQ_INDEX_210_END 
#define ZELDA_PP_SEQ_INDEX_211_END 
#define ZELDA_PP_SEQ_INDEX_212_END 
#define ZELDA_PP_SEQ_INDEX_213_END 
#define ZELDA_PP_SEQ_INDEX_214_END 
#define ZELDA_PP_SEQ_INDEX_215_END 
#define ZELDA_PP_SEQ_INDEX_216_END 
#define ZELDA_PP_SEQ_INDEX_217_END 
#define ZELDA_PP_SEQ_INDEX_218_END 
#define ZELDA_PP_SEQ_INDEX_219_END 
#define ZELDA_PP_SEQ_INDEX_220_END 
#define ZELDA_PP_SEQ_INDEX_221_END 
#define ZELDA_PP_SEQ_INDEX_222_END 
#define ZELDA_PP_SEQ_INDEX_223_END 
#define ZELDA_PP_SEQ_INDEX_224_END 
#define ZELDA_PP_SEQ_INDEX_225_END 
#define ZELDA_PP_SEQ_INDEX_226_END 
#define ZELDA_PP_SEQ_INDEX_227_END 
#define ZELDA_PP_SEQ_INDEX_228_END 
#define ZELDA_PP_SEQ_INDEX_229_END 
#define ZELDA_PP_SEQ_INDEX_230_END 
#define ZELDA_PP_SEQ_INDEX_231_END 
#define ZELDA_PP_SEQ_INDEX_232_END 
#define ZELDA_PP_SEQ_INDEX_233_END 
#define ZELDA_PP_SEQ_INDEX_234_END 
#define ZELDA_PP_SEQ_INDEX_235_END 
#define ZELDA_PP_SEQ_INDEX_236_END 
#define ZELDA_PP_SEQ_INDEX_237_END 
#define ZELDA_PP_SEQ_INDEX_238_END 
#define ZELDA_PP_SEQ_INDEX_239_END 
#define ZELDA_PP_SEQ_INDEX_240_END 
#define ZELDA_PP_SEQ_INDEX_241_END 
#define ZELDA_PP_SEQ_INDEX_242_END 
#define ZELDA_PP_SEQ_INDEX_243_END 
#define ZELDA_PP_SEQ_INDEX_244_END 
#define ZELDA_PP_SEQ_INDEX_245_END 
#define ZELDA_PP_SEQ_INDEX_246_END 
#define ZELDA_PP_SEQ_INDEX_247_END 
#define ZELDA_PP_SEQ_INDEX_248_END 
#define ZELDA_PP_SEQ_INDEX_249_END 
#define ZELDA_PP_SEQ_INDEX_250_END 
#define ZELDA_PP_SEQ_INDEX_251_END 
#define ZELDA_PP_SEQ_INDEX_252_END 
#define ZELDA_PP_SEQ_INDEX_253_END 
#define ZELDA_PP_SEQ_INDEX_254_END 
#define ZELDA_PP_SEQ_INDEX_255_END 
#define ZELDA_PP_SEQ_INDEX_256_END 


#endif	/* ZELDA_GUARD_PP_H */

